---
import { getPageLink } from '../lib/blog-helpers.ts'

export interface Props {
  currentPage: number
  numberOfPages: number
  tag: string
}

const { currentPage, numberOfPages, tag = '' } = Astro.props

const isFirstPage = currentPage === 1
const isLastPage = currentPage === numberOfPages

const startPage = currentPage - 2 < 1 ? 1 : currentPage - 2
const endPage =
  currentPage + 2 > numberOfPages ? numberOfPages : currentPage + 2

let pages = []
for (let i = startPage; i <= endPage; i++) {
  pages.push(i)
}
---

<div class="pagination">
  <a href={getPageLink(1, tag)} class={isFirstPage && 'inactive'}>&lt;&lt;</a>
  {
    pages.map((p: number) => (
      <a href={getPageLink(p, tag)} class={p === currentPage && 'inactive'}>
        {p}
      </a>
    ))
  }
  <a href={getPageLink(numberOfPages, tag)} class={isLastPage && 'inactive'}
    >&gt;&gt;</a
  >
</div>

<style>
  .pagination {
    display: flex;
    width: 100%;
    margin: 0 auto;
    padding: 1rem;
    color: var(--fg);
    justify-content: center;
    align-items: center;
    background-color: rgb(255, 255, 255);
    box-sizing: border-box; // パディングを幅に含める
  }
  .pagination a {
    display: block;
    width: 2.4rem;
    height: 3rem;
    margin: 0 0.4rem;
    border-radius: var(--radius);
    background: #f4f4f4;
    color: inherit;
    font-size: 0.85rem;
    text-align: center;
    text-decoration: underline;
    font-weight: 500;
    line-height: 3rem;
  }
  .pagination a:hover:not(.inactive) {
    background: #ddd;
  }
  .pagination a.inactive {
    color: #999;
    text-decoration: none;
  }
</style>
