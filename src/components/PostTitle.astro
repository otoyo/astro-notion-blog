---
import { Post } from '../lib/interfaces.ts'
import { getPostLink } from '../lib/blog-helpers.ts'

export interface Props {
  post: Post
  enableLink: boolean
}

const { post, enableLink = true } = Astro.props

let title = post.Title
---

<h2 class="post-title">
  {
    enableLink ? (
      <a href={getPostLink(post.Slug)}>
        {post.Icon && post.Icon.Type === 'emoji' ? (
          <>
            <span>{post.Icon.Emoji}</span>
            {title}
          </>
        ) : post.Icon && post.Icon.Type === 'external' ? (
          <>
            <img src={post.Icon.Url} alt="Post title icon" />
            {title}
          </>
        ) : (
          title
        )}
      </a>
    ) : (
      <>
        {post.Icon && post.Icon.Type === 'emoji' ? (
          <>
            <span>{post.Icon.Emoji}</span>
            {title}
          </>
        ) : post.Icon && post.Icon.Type === 'external' ? (
          <>
            <img src={post.Icon.Url} alt="Post title icon" />
            {title}
          </>
        ) : (
          title
        )}
      </>
    )
  }
</h2>

<style>
  .post-title {
    margin: 0;
    padding: 0.2rem 0;
    font-size: 1rem;
    font-weight: 700;
    color: var(--fg);
    overflow: hidden; /* 回り込みを防ぐために追加 */
  }
  .post-title a {
    font-size: 1.2rem;/* 記事タイトルのフォントサイズ */
    color: inherit;
  }
  .post-title span,
  .post-title img {
    display: inline-block;
    margin-right: 0.2em;
  }
  .post-title span {
    font-size: 1.2em;
  }
  .post-title img {
    width: 1.3em;
    height: 1.3em;
    vertical-align: sub;
  }
  @media (max-width: 430px) {
  .post-title {
    font-size: 1.4rem;
    overflow: hidden; /* 子要素のはみ出しを防止 */
    text-overflow: ellipsis; /* テキストが長すぎる場合に省略記号を表示 */
    white-space: normal; /* テキストを折り返す */
  }
  .post-title a {
    font-size: 0.8rem;
    display: block; /* 要素をブロック表示にして幅を制限 */
    max-width: 100%; /* 最大幅を親要素に合わせる */
    overflow: hidden;
    text-overflow: ellipsis; /* テキストが長すぎる場合に省略記号を表示 */
    white-space: normal; /* テキストを折り返す */
  }
  
}
</style>