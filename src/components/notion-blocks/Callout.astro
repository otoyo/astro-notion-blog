---
import * as interfaces from '../../lib/interfaces.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import RichText from './RichText.astro'
import NotionBlocks from '../NotionBlocks.astro'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props
---

<div class={`callout ${snakeToKebab(block.Callout.Color)}`}>
  {
    block.Callout.Icon && (
      <div class="icon">
        {block.Callout.Icon.Type === 'emoji' ? (
          block.Callout.Icon.Emoji
        ) : block.Callout.Icon.Type === 'external' ? (
          <img src={block.Callout.Icon.Url} alt="Icon in a callout block" />
        ) : null}
      </div>
    )
  }
  <div>
    {
      block.Callout.RichTexts.map((richText: interfaces.RichText) => (
        <RichText richText={richText} />
      ))
    }
    {
      block.Callout.Children && (
        <NotionBlocks blocks={block.Callout.Children} headings={headings} />
      )
    }
  </div>
</div>

<style>
  .callout {
    width: 100%; /* 幅を100%に設定 */
    max-width: 100vw; /* 最大幅を画面幅に設定 */
    box-sizing: border-box; /* パディングを幅に含める */
    overflow: hidden; /* はみ出しを防ぐ */
    padding: 12px;
    border-radius: 10px; /* 角を丸くする */
  }
  @media (max-width: 430px) {
    .callout {
      flex-direction: column;
      padding: 12px;
    }
    .callout > div.icon {
      margin-right: 0;
      margin-bottom: 0.5rem;
    }
    .callout img,
    .callout article {
      max-width: 100%;
      height: auto;
    }
    .callout blockquote { /* Twitter投稿のスタイル */
      max-width: 100%; /* 最大幅を100%に設定 */
      overflow: auto; /* はみ出し時にスクロール可能にする */
    }
  }
</style>